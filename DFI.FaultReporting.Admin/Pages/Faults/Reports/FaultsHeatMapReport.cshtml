@page
@using DFI.FaultReporting.Common.SessionStorage
@using DFI.FaultReporting.Models.FaultReports
@using DFI.FaultReporting.Models.Admin
@model DFI.FaultReporting.Admin.Pages.Faults.Reports.FaultsHeatMapReportModel
@{
    ViewData["Title"] = "Faults heat map report";
}
<body onload="initHeatMap()">
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <br />
        <h2>Select from one of the options below to render the heat map</h2>
        <hr />
        <div class="row">
            <div class="col-md-12">
                <div class="d-flex justify-content-center">
                    <div id="heatMap" style="height: 1000px; width: 100%;">
                        <div class="autocomplete">
                            <label for="searchBox" class="form-label" hidden></label>
                            <input id="searchBox" autocomplete="off" class="form-control" type="text" placeholder="Search for a place or road..." />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
</body>

<script type="text/javascript">

    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }

    //Retrieve session data to be used for displaying on map/popup.
    var faults = @Json.Serialize(HttpContext.Session.GetFromSession<List<Fault>>("Faults"));
    var faultTypes = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultType>>("FaultTypes"));
    var faultStatuses = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultStatus>>("FaultStatuses"));
    var faultPriorities = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultPriority>>("FaultPriorities"));
    var reports = @Json.Serialize(HttpContext.Session.GetFromSession<List<Report>>("Reports"));

</script>
<script src="~/js/mapping/HeatMap.js"></script>
<script src="~/js/mapping/AutoCompleteSearch.js"></script>