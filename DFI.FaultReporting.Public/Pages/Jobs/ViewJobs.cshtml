@page
@inject IHttpContextAccessor HttpContextAccessor
@using DFI.FaultReporting.Common.SessionStorage
@using DFI.FaultReporting.Models.FaultReports
@using DFI.FaultReporting.Models.Admin
@using DFI.FaultReporting.Models.Users
@model DFI.FaultReporting.Public.Pages.Jobs.ViewJobsModel
@{
    ViewData["Title"] = "Jobs";
}
<body onload="initJobsMap()">
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <br />
        <h2>View all assigned repair jobs</h2>
        <hr />
        <div class="row">
            <div class="col-6 text-center">
                <div class="small-tile">
                    <a class="nav-link" id="linkShowMapView" asp-page-handler="ShowMapView" aria-label="Map view link" title="Map view"><i class="fa-solid fa-map-location-dot"></i> Map</a>
                </div>
            </div>
            <div class="col-6 text-center">
                <div class="small-tile">
                    <a class="nav-link" id="linkShowTableView" asp-page-handler="ShowTableView" aria-label="Table view link" title="Table view"><i class="fa-solid fa-table-list"></i> Table</a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <form name="filterForm" id="filterForm" asp-page-handler="Filter" method="post">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-floating mb-3">
                                <select asp-for="RepairStatusFilter" class="form-select" asp-items="Model.RepairStatusList" onchange="this.form.submit()">
                                    <option value="0">
                                        All (not repaired)
                                    </option>
                                </select>
                                <label asp-for="RepairStatusFilter" class="form-label"></label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-floating mb-3">
                                <select asp-for="TargetMetFilter" class="form-select" onchange="this.form.submit()">
                                    <option value="0">
                                        All
                                    </option>
                                    <option value="1">
                                        Target met
                                    </option>
                                    <option value="2">
                                        Target not met
                                    </option>
                                </select>
                                <label asp-for="TargetMetFilter" class="form-label"></label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <br />
        @if (Model.ShowRepairMap)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="d-flex justify-content-center">
                        <div id="jobsMap" style="height: 1000px; width: 100%;">
                            <div class="autocomplete">
                                <label for="searchBox" class="form-label" hidden></label>
                                <input id="searchBox" autocomplete="off" class="form-control" type="text" placeholder="Search for a place or road..." />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (Model.ShowRepairTable)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        Repair details
                                    </th>
                                    <th>
                                        Fault details
                                    </th>
                                    <th>
                                        Input details
                                    </th>
                                    <th class="text-center">Edit details</th>
                                    <th class="text-center">View photos</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var repair in Model.PagedRepairs)
                                {
                                    <tr>
                                        <td>
                                            <strong>Status:</strong>
                                            <br />
                                            @Model.RepairStatuses.FirstOrDefault(rs => rs.ID == repair.RepairStatusID).RepairStatusDescription
                                            <br />
                                            <br />
                                            <strong>Target date</strong>
                                            <br />
                                            @repair.RepairTargetDate.ToShortDateString()
                                            <br />
                                            <br />
                                            @if (repair.RepairStatusID == 3)
                                            {
                                                <strong>Date repaired:</strong>
                                                <br />
                                                @Convert.ToDateTime(repair.ActualRepairDate).ToShortDateString()
                                                <br />
                                                <br />
                                                @if (repair.ActualRepairDate <= repair.RepairTargetDate)
                                                {
                                                    <span class="badge bg-success">Target met</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Target not met</span>
                                                }
                                                <br />
                                                <br />

                                            }
                                            @if (repair.RepairNotes != null && repair.RepairNotes != string.Empty)
                                            {
                                                <strong>Notes:</strong>
                                                <br />
                                                @repair.RepairNotes
                                            }
                                        </td>
                                        <td>
                                            @foreach (var fault in Model.Faults)
                                            {
                                                @if (fault.ID == repair.FaultID)
                                                {
                                                    <strong>Type:</strong>
                                                    <br />
                                                    @foreach (var faultType in Model.FaultTypes)
                                                    {
                                                        if (fault.FaultTypeID == faultType.ID)
                                                        {
                                                            @faultType.FaultTypeDescription
                                                        }
                                                    }
                                                    <br />
                                                    <br />
                                                    <strong>Status:</strong>
                                                    <br />
                                                    @foreach (var faultStatus in Model.FaultStatuses)
                                                    {
                                                        if (fault.FaultStatusID == faultStatus.ID)
                                                        {
                                                            @faultStatus.FaultStatusDescription
                                                        }
                                                    }
                                                    <br />
                                                    <br />
                                                    <strong>Priority:</strong>
                                                    <br />
                                                    @foreach (var faultPriority in Model.FaultPriorities)
                                                    {
                                                        if (fault.FaultPriorityID == faultPriority.ID)
                                                        {
                                                            @faultPriority.FaultPriorityRating
                                                        }
                                                    }
                                                    <br />
                                                    @Model.FaultPriorities.FirstOrDefault(fp => fp.ID == fault.FaultPriorityID).FaultPriorityDescription
                                                    <br />
                                                    <br />
                                                    <strong>Location:</strong>
                                                    <br />
                                                    @if (fault.RoadNumber != "undefined" && fault.RoadNumber != null)
                                                    {
                                                        @fault.RoadNumber
                                                        <br />
                                                    }
                                                    @if (fault.RoadName != "undefined" && fault.RoadName != null)
                                                    {
                                                        @fault.RoadName
                                                        <br />
                                                    }
                                                    @if (fault.RoadTown != "undefined" && fault.RoadTown != null)
                                                    {
                                                        @fault.RoadTown
                                                        <br />
                                                    }
                                                    @if (fault.RoadCounty != "undefined" && fault.RoadCounty != null)
                                                    {
                                                        @fault.RoadCounty
                                                    }
                                                }
                                            }
                                        </td>
                                        <td>
                                            <strong>Input:</strong>
                                            <br />
                                            @Html.DisplayFor(modelItem => repair.InputBy)
                                            <br />
                                            @Html.DisplayFor(modelItem => repair.InputOn)
                                        </td>
                                        <td class="text-center">
                                            @if (repair.RepairStatusID != 3)
                                            {
                                                <a asp-page="./EditJob" asp-route-id="@repair.ID" class="btn btn-outline-primary btn-lg"><i class="fa-solid fa-pen-to-square"></i></a>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <a asp-page="./JobImages" asp-route-id="@repair.ID" class="btn btn-outline-primary btn-lg"><i class="fa-solid fa-magnifying-glass-plus"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @{
                        var prevDisabled = !Model.Pager.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.Pager.HasNextPage ? "disabled" : "";
                    }
                    <div>
                        <ul class="pagination text-center">
                            <li>
                                <a asp-page-handler="Paging" asp-route-CurrentPage="1"
                                   class="btn btn-outline-primary btn-sm @prevDisabled"
                                   aria-label="First page button" style="font-size: 1em !important;">
                                    <span class="fa fa-chevron-left"></span><span class="fa fa-chevron-left"></span> First
                                </a>&nbsp;
                            </li>
                            <li>
                                <a asp-page-handler="Paging" asp-route-CurrentPage="@(Model.Pager.CurrentPage -1)"
                                   class="btn btn-outline-primary btn-sm @prevDisabled"
                                   aria-label="Previous page button" style="font-size: 1em !important;">
                                    <span class="fa fa-chevron-left"></span> Prev
                                </a>
                            </li>
                            <li>
                                &nbsp; Page @(Model.Pager.CurrentPage) of @(Model.Pager.TotalPages == 0 ? 1 : Model.Pager.TotalPages)  &nbsp;
                            </li>
                            <li>
                                <a asp-page-handler="Paging" asp-route-CurrentPage="@(Model.Pager.CurrentPage + 1)"
                                   class="btn btn-outline-primary btn-sm @nextDisabled"
                                   aria-label="Next page button"
                                   style="font-size: 1em !important;">
                                    Next <span class="fa fa-chevron-right"></span>
                                </a>&nbsp;
                            </li>
                            <li>
                                <a asp-page-handler="Paging" asp-route-CurrentPage="@Model.Pager.TotalPages"
                                   class="btn btn-outline-primary btn-sm @nextDisabled" aria-label="Last page button"
                                   style="font-size: 1em !important;">
                                    Last <span class="fa fa-chevron-right"></span><span class="fa fa-chevron-right"></span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
    <br />
</body>

<script type="text/javascript">

    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }

    //Retrieve session data to be used for displaying on map/popup.
    var faults = @Json.Serialize(HttpContext.Session.GetFromSession<List<Fault>>("Faults"));
    var faultTypes = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultType>>("FaultTypes"));
    var faultStatuses = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultStatus>>("FaultStatuses"));
    var faultPriorities = @Json.Serialize(HttpContext.Session.GetFromSession<List<FaultPriority>>("FaultPriorities"));
    var repairs = @Json.Serialize(HttpContext.Session.GetFromSession<List<Repair>>("Repairs"));
    var repairStatuses = @Json.Serialize(HttpContext.Session.GetFromSession<List<RepairStatus>>("RepairStatuses"));

</script>
<script src="~/js/mapping/ViewJobs.js"></script>
<script src="~/js/mapping/AutoCompleteSearch.js"></script>