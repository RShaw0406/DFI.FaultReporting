@page
@model DFI.FaultReporting.Public.Pages.Jobs.TodaysJobsModel
@{
    ViewData["Title"] = "Todays jobs";
}

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="description" content="Fault Reporting todays jobs">
<meta name="theme-color" content="#142062" />

<div class="container">
    <h1>@ViewData["Title"]</h1>
    <br />
    <h2>Select which jobs you wish to attend today, save your selection, then click the "View route map" link</h2>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <form id="selectJobsForm" name="selectJobsForm" method="post" asp-page-handler="SelectJobs">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>
                                    Repair details
                                </th>
                                <th>
                                    Fault details
                                </th>
                                <th>
                                    Input details
                                </th>
                                <th class="text-center">Select</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var repair in Model.PagedRepairs)
                            {

                                <tr>
                                    <td>
                                        <strong>Status:</strong>
                                        <br />
                                        @Model.RepairStatuses.FirstOrDefault(rs => rs.ID == repair.RepairStatusID).RepairStatusDescription
                                        <br />
                                        <br />
                                        <strong>Target date</strong>
                                        <br />
                                        @repair.RepairTargetDate.ToShortDateString()
                                        <br />
                                        <br />
                                        @if (repair.RepairStatusID == 3)
                                        {
                                            <strong>Date repaired:</strong>
                                            <br />
                                            @Convert.ToDateTime(repair.ActualRepairDate).ToShortDateString()
                                            <br />
                                            <br />
                                            @if (repair.ActualRepairDate <= repair.RepairTargetDate)
                                            {
                                                <span class="badge bg-success">Target met</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Target not met</span>
                                            }
                                            <br />
                                            <br />

                                        }
                                        @if (repair.RepairNotes != null && repair.RepairNotes != string.Empty)
                                        {
                                            <strong>Notes:</strong>
                                            <br />
                                            @repair.RepairNotes
                                        }
                                    </td>
                                    <td>
                                        @foreach (var fault in Model.Faults)
                                        {
                                            @if (fault.ID == repair.FaultID)
                                            {
                                                <strong>Type:</strong>
                                                <br />
                                                @foreach (var faultType in Model.FaultTypes)
                                                {
                                                    if (fault.FaultTypeID == faultType.ID)
                                                    {
                                                        @faultType.FaultTypeDescription
                                                    }
                                                }
                                                <br />
                                                <br />
                                                <strong>Status:</strong>
                                                <br />
                                                @foreach (var faultStatus in Model.FaultStatuses)
                                                {
                                                    if (fault.FaultStatusID == faultStatus.ID)
                                                    {
                                                        @faultStatus.FaultStatusDescription
                                                    }
                                                }
                                                <br />
                                                <br />
                                                <strong>Priority:</strong>
                                                <br />
                                                @foreach (var faultPriority in Model.FaultPriorities)
                                                {
                                                    if (fault.FaultPriorityID == faultPriority.ID)
                                                    {
                                                        @faultPriority.FaultPriorityRating
                                                    }
                                                }
                                                <br />
                                                @Model.FaultPriorities.FirstOrDefault(fp => fp.ID == fault.FaultPriorityID).FaultPriorityDescription
                                                <br />
                                                <br />
                                                <strong>Location:</strong>
                                                <br />
                                                @if (fault.RoadNumber != "undefined" && fault.RoadNumber != null)
                                                {
                                                    @fault.RoadNumber
                                                    <br />
                                                }
                                                @if (fault.RoadName != "undefined" && fault.RoadName != null)
                                                {
                                                    @fault.RoadName
                                                    <br />
                                                }
                                                @if (fault.RoadTown != "undefined" && fault.RoadTown != null)
                                                {
                                                    @fault.RoadTown
                                                    <br />
                                                }
                                                @if (fault.RoadCounty != "undefined" && fault.RoadCounty != null)
                                                {
                                                    @fault.RoadCounty
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        <strong>Input:</strong>
                                        <br />
                                        @Html.DisplayFor(modelItem => repair.InputBy)
                                        <br />
                                        @Html.DisplayFor(modelItem => repair.InputOn)
                                    </td>
                                    <td class="text-center">
                                        @for (var i = 0; i < Model.AvailableJobs.Count(); i++)
                                        {
                                            @if (repair.ID == Model.AvailableJobs[i].RepairID)
                                            {
                                                <input id="@Model.AvailableJobs[i].RepairID" asp-for="@Model.AvailableJobs[i].RepairID" hidden />
                                                <label for="@Model.AvailableJobs[i].RepairID" asp-for="@Model.AvailableJobs[i].RepairID" hidden></label>

                                                <input id="@Model.AvailableJobs[i]" asp-for="@Model.AvailableJobs[i].isSelected" class="form-check-input" onchange="this.form.submit()" />
                                                <label for="@Model.AvailableJobs[i]" asp-for="@Model.AvailableJobs[i].isSelected" class="form-check-label" hidden>@Model.AvailableJobs[i].RepairID</label>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @{
                    var prevDisabled = !Model.Pager.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.Pager.HasNextPage ? "disabled" : "";
                }
                <div>
                    <ul class="pagination text-center">
                        <li>
                            <a asp-page-handler="Paging" asp-route-CurrentPage="1" asp-route-AvailableJobs="@(Model.AvailableJobs)"
                               class="btn btn-outline-primary btn-sm @prevDisabled"
                               aria-label="First page button" style="font-size: 1em !important;">
                                <span class="fa fa-chevron-left"></span><span class="fa fa-chevron-left"></span> First
                            </a>&nbsp;
                        </li>
                        <li>
                            <a asp-page-handler="Paging" asp-route-CurrentPage="@(Model.Pager.CurrentPage -1)" asp-route-AvailableJobs="@(Model.AvailableJobs)"
                               class="btn btn-outline-primary btn-sm @prevDisabled"
                               aria-label="Previous page button" style="font-size: 1em !important;">
                                <span class="fa fa-chevron-left"></span> Prev
                            </a>
                        </li>
                        <li>
                            &nbsp; Page @(Model.Pager.CurrentPage) of @(Model.Pager.TotalPages == 0 ? 1 : Model.Pager.TotalPages)  &nbsp;
                        </li>
                        <li>
                            <a asp-page-handler="Paging" asp-route-CurrentPage="@(Model.Pager.CurrentPage + 1)" asp-route-AvailableJobs="@(Model.AvailableJobs)"
                               class="btn btn-outline-primary btn-sm @nextDisabled"
                               aria-label="Next page button"
                               style="font-size: 1em !important;">
                                Next <span class="fa fa-chevron-right"></span>
                            </a>&nbsp;
                        </li>
                        <li>
                            <a asp-page-handler="Paging" asp-route-CurrentPage="@Model.Pager.TotalPages" asp-route-AvailableJobs="@(Model.AvailableJobs)"
                               class="btn btn-outline-primary btn-sm @nextDisabled" aria-label="Last page button"
                               style="font-size: 1em !important;">
                                Last <span class="fa fa-chevron-right"></span><span class="fa fa-chevron-right"></span>
                            </a>
                        </li>
                    </ul>
                </div>
            </form>
        </div>
    </div>
    <br />
    <div class="btn-group">
        <a asp-page-handler="SaveSelection" class="btn btn-lg btn-outline-success"><i class="fa-regular fa-circle-check"></i> Save selection</a>
    </div>
    <br />
    <br />
    @if (Model.SelectionSuccess)
    {
        <div class="alert alert-success alert-dismissible">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <strong>Success: </strong>
            <p>Jobs selection has been saved.</p>
        </div>
    }
    <br />
    <div class="row">
        <div class="col-md-12 text-center">
            <div class="small-tile">
                <a class="nav-link" asp-page="/Jobs/ViewRouteMap" aria-label="View route map link" title="View route map"><i class="fa-solid fa-route"></i> Show route map</a>
            </div>
        </div>
    </div>
    <br />
</div>